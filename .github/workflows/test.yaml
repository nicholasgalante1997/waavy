name: test

on:
    push:
    pull_request:
    workflow_dispatch:

jobs:
    check-types:
        name: Check Types
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Bun Runtime
              uses: oven-sh/setup-bun@v2
              with:
                bun-version: latest
            - name: Install dependencies
              run: bun install
            - name: Check types
              run: bun run check-types
              continue-on-error: true
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Bun Runtime
              uses: oven-sh/setup-bun@v2
              with:
                bun-version: latest
            - name: Install dependencies
              run: bun install
            - name: Run tests
              run: bun test
              continue-on-error: true
    test-linux-sh:
        name: Test Linux Shell Scripts
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Bun Runtime
              uses: oven-sh/setup-bun@v2
              with:
                bun-version: latest
            - name: Install dependencies
              run: bun install
            - name: Build
              run: bun run build 
              env:
                NODE_ENV: production
                WAAVY_CLI_COMMAND_INCLUDE_BUNDLE: ${{ secrets.WAAVY_CLI_COMMAND_INCLUDE_BUNDLE }}
                WAAVY_CLI_COMMAND_INCLUDE_CREATE: ${{ secrets.WAAVY_CLI_COMMAND_INCLUDE_CREATE }}
                WAAVY_CLI_COMMAND_INCLUDE_PRERENDER: ${{ secrets.WAAVY_CLI_COMMAND_INCLUDE_PRERENDER }}
                WAAVY_CLI_COMMAND_INCLUDE_RENDER: ${{ secrets.WAAVY_CLI_COMMAND_INCLUDE_RENDER }}
                WAAVY_CLI_COMMAND_INCLUDE_SSG: ${{ secrets.WAAVY_CLI_COMMAND_INCLUDE_SSG }}
                WAAVY_CLI_COMMAND_INCLUDE_UPGRADE: ${{ secrets.WAAVY_CLI_COMMAND_INCLUDE_UPGRADE }}
              continue-on-error: true
            - name: Run shell scripts
              run: |
                chmod 755 ./test/commands/render.linux.sh && \
                ./test/commands/render.linux.sh
              continue-on-error: true
    summary:
        name: Pipeline Summary
        needs:
            - check-types
            - test
            - test-linux-sh
        runs-on: ubuntu-latest
        if: always()  # Run regardless of previous job status
        steps:
            - name: Print summary
              run: |
                echo "üìù Pipeline Summary:"
                
                if [[ "${{ needs.test.result }}" == "success" && "${{ needs.check-types.result }}" == "success" && "${{ needs.test-linux-sh.result }}" == "success" ]]; then
                    echo "‚úÖ All jobs succeeded!"
                else
                    echo "‚ùå One or more jobs failed."
                    echo "üîé check-types: ${{ needs.check-types.result }}"
                    echo "üîé test: ${{ needs.test.result }}"
                    echo "üîé test_linux_shell_commands: ${{ needs.test-linux-sh.result }}"
                    exit 1
                fi


            